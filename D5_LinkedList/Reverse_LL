TC: O(N) and SC : O(1)

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode d = null;
        
        if(head == null) return head;
        
        ListNode next = head;
        while(head.next != null){
            next = head.next;
            head.next = d;
            d = head;
            head = next;
        }
        head.next = d;
        d = head;
        return d;
    }
}

Strivers:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode d = null;
        
        if(head == null) return head;
        
        ListNode next = head;
        while(head != null){
            next = head.next;
            head.next = d;
            d = head;
            head = next;
        }
        
        return d;
    }
}